from parser_iso8583 import *
from struct_iso8583 import *
from utils import *

if __name__ == '__main__':
    
    #Area of Class Tests
    #MessageIso() Tests
    msg     = "080082382001000100000400000000000000040510004207958010004204054841100000007225018990024400400003001301"
    msg     = "02003238640128C182000020000000000010550403102449904108102449040399514840501100000007225376363180000126563000=21010000150010030000403000288WAMPHML100000000000005421499002440013000300300250004000100260015POSSE200130522A00320002040040000300100510003003006200020100740016526194CE486DA110007500370048219000020040002=0000000002004000200780001200790003002012600012014500012022800048000484032DF7A01019F360202f6DF61041F76AE73"
    msg     = "02003238640128C182000020000000000001500405081733630866081733040599514840501100000007225376363180000126563000=21010000150010030000405138305WAMPHML100000000000005421499002440013000300300250004000100260015POSSE200130522A00320002040040000300100510003003006200020100740016526194CE486DA110007500370048219000020040002=0000000002004000200780001200790003002012600012014500012022800048000484032DF7A01019F360202f7DF61041F76AE73"
    obj_iso = ParserMessageIso(msg)

    print_iso("Message Original", obj_iso.message_iso)
    #MtiIso() Tests
    omti = MtiIso()
    omti.mti = obj_iso.get_mti()
    print_iso("Message Type Indicator", omti.mti)
    #BitmapIso() Tests
    obit = BitmapIso()
    obit.bitmap = obj_iso.get_bitmap()
    print_iso("Bitmap",get_hex(obit.bitmap[0]))
    print_iso("[DEBUG] Rule Bitmaps", debug_bitmap(obit.bitmap[0]))
    print_iso("[DEBUG] Bits Active", BitmapIso.get_bitmap_parsed(obit.bitmap))

    #DataElementIso() Tests
    odat = DataElementIso(obit.bitmap, obj_iso.get_data_element())
    odat.show_data_elements()
